{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // const body = JSON.stringify({email, password});\n  try {\n    console.log(\"hello\");\n    const res = await axios.post('http://localhost:8000/api/token/', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert('Login Success', 'success'));\n  } catch (err) {\n    console.log('err: ', err);\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch(setAlert('Login Fail', 'error'));\n  }\n};\nexport const signup = (username, email, password, password2) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    email,\n    password,\n    password2\n  });\n  try {\n    const res = await axios.post('http://localhost:8000/api/accounts/signup', body, config);\n    console.log('res: ', res);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n    dispatch(login(email, password));\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n    dispatch(setAlert('Login Fail', 'error'));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch(setAlert('Logout Success', 'success'));\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","login","email","password","dispatch","config","headers","console","log","res","post","type","payload","data","err","signup","username","password2","body","JSON","stringify","logout"],"sources":["C:/Projects/Realest_Estate/frontend/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from './types';\r\n\r\n    export const login = (email, password) => async dispatch => {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const body = JSON.stringify({email, password});\r\n        try{\r\n            console.log(\"hello\");\r\n            const res = await axios.post('http://localhost:8000/api/token/', {email,password}, config);\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(setAlert('Login Success', 'success'));\r\n        }catch(err){\r\n            console.log('err: ', err);\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n            dispatch(setAlert('Login Fail', 'error'));\r\n        }\r\n    }\r\n\r\nexport const signup = (username, email, password, password2) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({username, email, password, password2});\r\n\r\n    try{\r\n        const res = await axios.post('http://localhost:8000/api/accounts/signup', body, config);\r\n        console.log('res: ', res);\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(login(email, password));\r\n    }catch(err){\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n        dispatch(setAlert('Login Fail', 'error'));\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch(setAlert('Logout Success', 'success'));\r\n    dispatch({type: LOGOUT})\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAElC,SACIC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,MAAM,QACH,SAAS;AAEZ,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EACxD,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB;EACJ,CAAC;;EAED;EACA,IAAG;IACCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,kCAAkC,EAAE;MAACR,KAAK;MAACC;IAAQ,CAAC,EAAEE,MAAM,CAAC;IAC1FD,QAAQ,CAAC;MACLO,IAAI,EAAEb,aAAa;MACnBc,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IACFT,QAAQ,CAACT,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;EAClD,CAAC,QAAMmB,GAAG,EAAC;IACPP,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,GAAG,CAAC;IACzBV,QAAQ,CAAC;MACLO,IAAI,EAAEZ;IACV,CAAC,CAAC;IACFK,QAAQ,CAACT,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;EAC7C;AACJ,CAAC;AAEL,OAAO,MAAMoB,MAAM,GAAGA,CAACC,QAAQ,EAAEd,KAAK,EAAEC,QAAQ,EAAEc,SAAS,KAAK,MAAMb,QAAQ,IAAI;EAC9E,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB;EACJ,CAAC;EACD,MAAMY,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACJ,QAAQ;IAAEd,KAAK;IAAEC,QAAQ;IAAEc;EAAS,CAAC,CAAC;EAEnE,IAAG;IACC,MAAMR,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,2CAA2C,EAAEQ,IAAI,EAAEb,MAAM,CAAC;IACvFE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,GAAG,CAAC;IACzBL,QAAQ,CAAC;MACLO,IAAI,EAAEf,cAAc;MACpBgB,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IACFT,QAAQ,CAACH,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAAC;EACpC,CAAC,QAAMW,GAAG,EAAC;IACPV,QAAQ,CAAC;MACLO,IAAI,EAAEd;IACV,CAAC,CAAC;IACFO,QAAQ,CAACT,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;EAC7C;AACJ,CAAC;AAED,OAAO,MAAM0B,MAAM,GAAGA,CAAA,KAAMjB,QAAQ,IAAI;EACpCA,QAAQ,CAACT,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;EAC/CS,QAAQ,CAAC;IAACO,IAAI,EAAEX;EAAM,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}