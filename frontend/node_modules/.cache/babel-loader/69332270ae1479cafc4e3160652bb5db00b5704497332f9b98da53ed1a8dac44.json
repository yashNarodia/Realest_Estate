{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Constent-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('http://localhost:8000/api/token/', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert('Login Success', 'success'));\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch(setAlert('Login Fail', 'error'));\n  }\n};\nexport const signup = (username, email, password, password2) => async dispatch => {\n  const config = {\n    headers: {\n      'Constent-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    email,\n    password,\n    password2\n  });\n  try {\n    const res = await axios.post('http://localhost:8000/api/accounts/signup', body, config);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n    dispatch(login(email, password));\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n    dispatch(setAlert('Login Fail', 'error'));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch(setAlert('Logout Success', 'success'));\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","signup","username","password2","logout"],"sources":["C:/Projects/Realest_Estate/frontend/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from './types';\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Constent-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password});\r\n    try{\r\n        const res = await axios.post('http://localhost:8000/api/token/', body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Login Success', 'success'));\r\n    }catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n        dispatch(setAlert('Login Fail', 'error'));\r\n    }\r\n}\r\n\r\nexport const signup = (username, email, password, password2) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Constent-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({username, email, password, password2});\r\n\r\n    try{\r\n        const res = await axios.post('http://localhost:8000/api/accounts/signup', body, config);\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(login(email, password));\r\n    }catch(err){\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n        dispatch(setAlert('Login Fail', 'error'));\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch(setAlert('Logout Success', 'success'));\r\n    dispatch({type: LOGOUT})\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAElC,SACIC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,MAAM,QACH,SAAS;AAEhB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EACxD,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAC;MACJ,eAAe,EAAE;IACrB;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACP,KAAK;IAAEC;EAAQ,CAAC,CAAC;EAC9C,IAAG;IACC,MAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,kCAAkC,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAC9ED,QAAQ,CAAC;MACLQ,IAAI,EAAEd,aAAa;MACnBe,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IACFV,QAAQ,CAACT,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;EAClD,CAAC,QAAMoB,GAAG,EAAC;IACPX,QAAQ,CAAC;MACLQ,IAAI,EAAEb;IACV,CAAC,CAAC;IACFK,QAAQ,CAACT,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;EAC7C;AACJ,CAAC;AAED,OAAO,MAAMqB,MAAM,GAAGA,CAACC,QAAQ,EAAEf,KAAK,EAAEC,QAAQ,EAAEe,SAAS,KAAK,MAAMd,QAAQ,IAAI;EAC9E,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAC;MACJ,eAAe,EAAE;IACrB;EACJ,CAAC;EACD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACQ,QAAQ;IAAEf,KAAK;IAAEC,QAAQ;IAAEe;EAAS,CAAC,CAAC;EAEnE,IAAG;IACC,MAAMR,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,2CAA2C,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IACvFD,QAAQ,CAAC;MACLQ,IAAI,EAAEhB,cAAc;MACpBiB,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IACFV,QAAQ,CAACH,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAAC;EACpC,CAAC,QAAMY,GAAG,EAAC;IACPX,QAAQ,CAAC;MACLQ,IAAI,EAAEf;IACV,CAAC,CAAC;IACFO,QAAQ,CAACT,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;EAC7C;AACJ,CAAC;AAED,OAAO,MAAMwB,MAAM,GAAGA,CAAA,KAAMf,QAAQ,IAAI;EACpCA,QAAQ,CAACT,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;EAC/CS,QAAQ,CAAC;IAACQ,IAAI,EAAEZ;EAAM,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}